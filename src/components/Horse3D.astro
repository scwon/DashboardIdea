---
---

<div id="horse-canvas"></div>

<script>
  import * as THREE from 'three';
  import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
  const renderer = new THREE.WebGLRenderer({
    alpha: true,
    antialias: true
  });
  
  // 배경을 투명하게 설정
  renderer.setClearColor(0x000000, 0);
  
  const container = document.getElementById('horse-canvas');
  if (!container) {
    throw new Error('Canvas container not found');
  }
  
  renderer.setSize(window.innerWidth, window.innerHeight);
  container.appendChild(renderer.domElement);

  // 조명 설정
  const light = new THREE.AmbientLight(0xffffff, 1);
  scene.add(light);
  
  const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
  directionalLight.position.set(0, 1, 1);
  scene.add(directionalLight);

  // 말 모델 로드
  const loader = new GLTFLoader();
  let horse: THREE.Group | null = null;
  
  loader.load(
    '/horse.glb', // public 폴더는 빌드 시 루트로 이동되므로 경로 수정
    function (gltf) {
      horse = gltf.scene;
      scene.add(horse);
      
      // 모델 크기 및 위치 조정
      horse.scale.set(1, 1, 1);
      horse.position.y = 0;
    }
  );

  camera.position.z = 5;

  // 애니메이션 함수
  function animate() {
    requestAnimationFrame(animate);
    
    if (horse) {
      horse.rotation.y += 0.01; // 회전 속도
    }
    
    renderer.render(scene, camera);
  }

  animate();

  // 창 크기 변경 대응
  window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  });
</script>

<style>
  #horse-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: -1;
    background: transparent;
  }
</style>
